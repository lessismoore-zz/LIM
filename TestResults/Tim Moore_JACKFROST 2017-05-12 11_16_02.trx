<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="27b0824e-8a44-4e05-b9f4-0a6c8604e502" name="Tim Moore@JACKFROST 2017-05-12 11:16:02" runUser="JACKFROST\Tim Moore" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="59dbb065-7fa3-4828-ac9a-7c422d4f56ed">
    <Description>These are default test settings for a local test run.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Tim Moore_JACKFROST 2017-05-12 11_16_02" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2017-05-12T11:16:02.7349574-05:00" queuing="2017-05-12T11:16:05.9806952-05:00" start="2017-05-12T11:16:06.5226622-05:00" finish="2017-05-12T11:16:24.6680009-05:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="j:\wwwroot\lessismoore\lessismoore.web\webandloadtestproject1\webtest1.webtest" id="d7f37a64-0760-413f-9924-d27c5b375dfd" persistedWebTest="">
      <Execution id="95e1912b-fbd0-4feb-a180-bd4e4c4b7ee7" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="d7f37a64-0760-413f-9924-d27c5b375dfd" executionId="95e1912b-fbd0-4feb-a180-bd4e4c4b7ee7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="95e1912b-fbd0-4feb-a180-bd4e4c4b7ee7" testId="d7f37a64-0760-413f-9924-d27c5b375dfd" testName="WebTest1" computerName="JACKFROST" duration="00:00:07.1370054" startTime="2017-05-12T11:16:06.6626646-05:00" endTime="2017-05-12T11:16:24.5274977-05:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="95e1912b-fbd0-4feb-a180-bd4e4c4b7ee7">
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="59dbb065-7fa3-4828-ac9a-7c422d4f56ed">
        <Description>These are default test settings for a local test run.</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="Tim Moore_JACKFROST 2017-05-12 11_16_02" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Tim Moore_JACKFROST 2017-05-12 11_16_02\In\95e1912b-fbd0-4feb-a180-bd4e4c4b7ee7\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>